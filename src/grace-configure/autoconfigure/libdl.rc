# ---------------------------------------------------------------------------
# Figure out whether we need libdl
# ---------------------------------------------------------------------------

cat >conftest.cpp <<EOF
#include <dlfcn.h>
int main (int argc, char *argv[])
{
   void *test = dlopen ("conftest.so",RTLD_LAZY);
   return 1;
}
EOF

saypending "checking whether dlopen needs -ldl"
if $CXX $CXXFLAGS -o conftest conftest.cpp >>configure.log 2>&1; then
  LIBDL=""
  saypass "no"
else
  LIBDL="-ldl"
  saypass "yes"
fi

cat >conftest.cpp <<EOF
#include <stdio.h>
#include <unistd.h>
#include <dlfcn.h>
#include <sys/types.h>
extern "C" int find_me (void)
{
	return 1;
}

typedef int (*fptr)(void);

int main (int argc, char *argv[])
{

	void *test = dlopen (NULL,RTLD_LAZY);
	fptr func = (fptr) dlsym (test, "find_me");
	if (! func) return 1;
	int res = (*func)();
	if (res == 1) return 0;
	return 1;
}
EOF

saypending "checking need for export-dynamic"
if $CXX $CXXFLAGS -c -o conftest.o conftest.cpp >> configure.log 2>&1; then
  :
else
  sayfail "error"
fi
if $LD $LDFLAGS -o conftest conftest.o $LIBDL >>configure.log 2>&1; then
  if ./conftest; then
    LIBDL_LDFLAGS=""
    saypass "no"
  elif $LD $LDFLAGS -Wl,--export-dynamic -o conftest conftest.o $LIBDL >> configure.log 2>&1; then
	if ./conftest; then
	  LIBDL_LDFLAGS="-Wl,--export-dynamic"
	  saypass "yes"
	else
	  saypass "no"
	  echowarn "warning: no suitable method found to resolve internal symbols of the "
	  echowarn "         running process, library-defined optional initialization "
	  echowarn "         hooks may not work as advertised"
	fi
  else
    saypass "no"
	echowarn "warning: no suitable method found to resolve internal symbols of the "
	echowarn "         running process, library-defined optional initialization "
	echowarn "         hooks may not work as advertised"
  fi
else
  sayfail "error - libdl linking not working out"
fi

rm -f conftest.cpp conftest


