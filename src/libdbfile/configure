#!/bin/sh
# ===========================================================================
# Configure script generated by tina (revision e24fd5fe122a)
# ===========================================================================

# ---------------------------------------------------------------------------
# Solaris' /bin/sh uses a braindead builtin echo, circumvent
# ---------------------------------------------------------------------------

TEST=`echo -n ""`
if [ -z "$TEST" ]; then
  ECHON="echo -n"
  NNL=""
else
  ECHON="/usr/bin/echo"
  NNL="\c"
fi

# ---------------------------------------------------------------------------
# Parse command line arguments
# ---------------------------------------------------------------------------

usage ()
{
  cat << EOF
Usage: $0 [-q]
EOF
  exit 1
}
QUIET=0

while getopts "q" opt; do
  case $opt in

  q) QUIET=1 ;;
  esac
done

# ---------------------------------------------------------------------------
# Provide a bunch of useful tools to our snippets
# ---------------------------------------------------------------------------

saypending ()
{
  if [ $QUIET = 1 ]; then
    PENDING=$1
  else
    $ECHON "$1: $NNL"
  fi
}

saypass ()
{
  if [ $QUIET = 1 ]; then
    : # nothing
  else
    echo "$1"
  fi
}

sayfail ()
{
  if [ $QUIET = 1 ]; then
    echo "$PENDING: $1" >&2
    exit 1
  else
    echo "$1"
    exit 1
  fi
}

echowarn ()
{
	if [ $QUIET = 1 ]; then
	  :
	else
	  echo "$1"
	fi
}
# ---------------------------------------------------------------------------
# Figure out if there's a Vendorware C++ compiler on board
# ---------------------------------------------------------------------------

saypending "looking for c++ compiler"
CXX=`which CC 2>/dev/null`

if [ -f "$CXX" ]; then
  actually_gcc=`$CXX -v 2>&1 | grep gcc | sed -e "s/^gcc/Y/"`

  cat >conftest.cpp <<_eof_
#include <stdio.h>
int main(int argc, char *argv[]) {
  printf ("hello, nurse\n");
}
_eof_

  $CXX -o conftest.bin conftest.cpp >/dev/null 2>&1 || actually_gcc="YES"
  rm -f conftest.cpp conftest.bin >/dev/null 2>&1
  if [ ! -z "$actually_gcc" ]; then
    CXX=""
  fi
fi

if [ -f "$CXX" ]; then
  saypass "$CXX"
  CXXFLAGS="-n32 -O"
  SHARED="-shared"
  LD="$CXX"
  LDFLAGS=""
else
  CXX=`which g++`
  if [ -f "$CXX" ]; then
    saypass "$CXX"
    CXXFLAGS=${CXXFLAGS}
    SHARED="-shared -fPIC"
    LD="$CXX"
    LDFLAGS=""
  else
    sayfail "fail"
    CXX=""
    exit 1;
  fi
fi

COMPILER=${CXX}
COMPILERFLAGS=${CXXFLAGS}
# ---------------------------------------------------------------------------
# Figure out if there's a Vendorware C++ compiler on board
# ---------------------------------------------------------------------------

saypending "looking for ranlib"
RANLIB=`which ranlib 2>/dev/null`
if [ ! -f "$RANLIB" ]; then
  RANLIB=""
fi

if [ -z "$RANLIB" ]; then
  RANLIB=":"
  saypass "n/a"
else
  saypass "found"
  RANLIB="ranlib"
fi


# ---------------------------------------------------------------------------
# Figure out whether LD accepts -rdynamic
# ---------------------------------------------------------------------------

cat >conftest.cpp <<EOF
#include <stdio.h>

int main (int argc, char *argv[])
{
	printf ("hello, world\n");
    return 0;
}
EOF

saypending "checking whether $LD linker accepts -rdynamic"
$CXX $CXXFLAGS -c conftest.cpp >/dev/null 2>&1
if $LD $LDFLAGS -rdynamic -o conftest conftest.o >>configure.log 2>&1; then
  RDYNAMIC="-rdynamic"
  saypass "yes"
else
  RDYNAMIC=""
  saypass "no"
fi

rm -f conftest.cpp conftest contest.o


# ---------------------------------------------------------------------------
# Check for libpthread functionality
# ---------------------------------------------------------------------------

cat >conftest.c <<EOF
#include <pthread.h>
#include <stdio.h>

int main (int argc, char *argv[])
{
	pthread_attr_t attr;
	pthread_mutexattr_t mattr;
	
	pthread_attr_init (&attr);
	pthread_mutexattr_init (&mattr);
	return 1;
}
EOF

saypending "checking for pthread support"
if $COMPILER $COMPILERFLAGS -o conftest conftest.c >>configure.log 2>&1; then
  LIBPTHREAD=""
  saypass "yes"
else
  if $COMPILER $COMPILERFLAGS -o conftest conftest.c -lpthread >>configure.log 2>&1; then
    LIBPTHREAD="-lpthread"
	saypass "-lpthread"
  elif $COMPILER $COMPILERFLAGS -o conftest conftest.c -lc_r >>configure.log 2>&1; then
    LIBPTHREAD="-lc_r"
    saypass "-lc_r"
  else
    sayfail "no - This application needs a working pthreads implementation."
  fi
fi

saypending "checking for ctime_r"
cat > conftest.c << EOF
#include <time.h>
int main (int argc, char *argv[])
{
	char buf[256];
	char *result;
	time_t ti;
	result = ctime_r (&ti, buf);
	return 0;
}
EOF
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >>configure.log 2>&1; then
  saypass "time.h"
else
  cat > conftest.c << EOF
#define _POSIX_C_SOURCE 199506L
#define _POSIX_PTHREAD_SEMANTICS 1
#define _XOPEN_SOURCE 1
#define __EXTENSIONS__ 1
#include <pthread.h>
#include <time.h>
int main (int argc, char *argv[])
{
	char buf[256];
	char *result;
	time_t ti;
	result = ctime_r (&ti, buf);
	return 0;
}
EOF
  if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >>configure.log 2>&1; then
    saypass "time.h with solaris twist"
    CTIME_R_INCLUDE="#include <pthread.h>"
    CTIME_R_PTHREAD_DEFINE="#define _POSIX_PTHREAD_SEMANTICS 1"
    CTIME_R_XOPEN_DEFINE="#define _XOPEN_SOURCE 1"
    CTIME_R_XPG_DEFINE="#define __EXTENSIONS__ 1"
    CTIME_R_DEFINE="#define _POSIX_C_SOURCE 199506L"
  else
    sayfail "screwed"
  fi
fi

saypending "checking for pthread_rwlock_t"
cat > conftest.c << EOF
#include <pthread.h>
int main (int argc, char *argv[])
{
	pthread_rwlock_t *rwlock;
	pthread_rwlock_trywrlock (rwlock);
	return 0;
}
EOF
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >>configure.log 2>&1; then
  saypass "yes"
  PTHREAD_HAVE_RWLOCK="#define PTHREAD_HAVE_RWLOCK 1"
  saypending "checking for pthread_rwlock_timedwrlock"
  cat > conftest.c << EOF
#include <pthread.h>
#include <time.h>
int main (int argc, char *argv[])
{
	pthread_rwlock_t *rwlock;
	struct timespec ts;
	pthread_rwlock_timedwrlock (rwlock, &ts);
	return 0;
}
EOF
  if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >> configure.log 2>&1; then
    saypass "yes"
    PTHREAD_HAVE_TIMEDLOCK="#define PTHREAD_HAVE_TIMEDLOCK 1"
  else
    saypass "no"
    PTHREAD_HAVE_TIMEDLOCK=""
  fi
else
  saypass "no"
  PTHREAD_HAVE_RWLOCK=""
  PTHREAD_HAVE_TIMEDLOCK=""
fi


rm -f conftest conftest.o conftest.c
# ---------------------------------------------------------------------------
# Figure out whether we need libdl
# ---------------------------------------------------------------------------

cat >conftest.cpp <<EOF
#include <dlfcn.h>
int main (int argc, char *argv[])
{
   void *test = dlopen ("conftest.so",RTLD_LAZY);
   return 1;
}
EOF

saypending "checking whether dlopen needs -ldl"
if $CXX $CXXFLAGS -o conftest conftest.cpp >>configure.log 2>&1; then
  LIBDL=""
  saypass "no"
else
  LIBDL="-ldl"
  saypass "yes"
fi

cat >conftest.cpp <<EOF
#include <stdio.h>
#include <unistd.h>
#include <dlfcn.h>
#include <sys/types.h>
extern "C" int find_me (void)
{
	return 1;
}

typedef int (*fptr)(void);

int main (int argc, char *argv[])
{

	void *test = dlopen (NULL,RTLD_LAZY);
	fptr func = (fptr) dlsym (test, "find_me");
	if (! func) return 1;
	int res = (*func)();
	if (res == 1) return 0;
	return 1;
}
EOF

saypending "checking need for export-dynamic"
if $CXX $CXXFLAGS -c -o conftest.o conftest.cpp >> configure.log 2>&1; then
  :
else
  sayfail "error"
fi
if $LD $LDFLAGS -o conftest conftest.o $LIBDL >>configure.log 2>&1; then
  if ./conftest; then
    LIBDL_LDFLAGS=""
    saypass "no"
  elif $LD $LDFLAGS -Wl,--export-dynamic -o conftest conftest.o $LIBDL >> configure.log 2>&1; then
	if ./conftest; then
	  LIBDL_LDFLAGS="-Wl,--export-dynamic"
	  saypass "yes"
	else
	  saypass "no"
	  echowarn "warning: no suitable method found to resolve internal symbols of the "
	  echowarn "         running process, library-defined optional initialization "
	  echowarn "         hooks may not work as advertised"
	fi
  else
    saypass "no"
	echowarn "warning: no suitable method found to resolve internal symbols of the "
	echowarn "         running process, library-defined optional initialization "
	echowarn "         hooks may not work as advertised"
  fi
else
  sayfail "error - libdl linking not working out"
fi

rm -f conftest.cpp conftest


# ---------------------------------------------------------------------------
# Figure out whether we need libsocket
# ---------------------------------------------------------------------------

cat >conftest.c <<EOF
#include <sys/types.h>
#include <sys/socket.h>

int main (int argc, char *argv[])
{
    int test = socket(PF_INET, SOCK_STREAM, 0);
    return 1;
}
EOF

saypending "checking whether socket needs -lsocket"
if $COMPILER $COMPILERFLAGS -o conftest conftest.c >>configure.log 2>&1; then
  LIBSOCKET=""
  saypass "no"
else
  LIBSOCKET="-lsocket"
  saypass "yes"
fi

rm -f conftest.c conftest

# ---------------------------------------------------------------------------
# Figure out whether we need libnsl
# ---------------------------------------------------------------------------

cat >conftest.c <<EOF
#include <netdb.h>

int main (int argc, char *argv[])
{
	struct hostent *h = gethostbyname("localhost");
    return 1;
}
EOF

saypending "checking whether gethostbyname needs -lnsl"
if $COMPILER $COMPILERFLAGS -o conftest conftest.c >>configure.log 2>&1; then
  LIBNSL=""
  saypass "no"
else
  LIBNSL="-lnsl"
  saypass "yes"
fi

rm -f conftest.c conftest

# ---------------------------------------------------------------------------
# Figure out whether socklen_t is defined
# ---------------------------------------------------------------------------

cat >conftest.c <<EOF
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

int main(int argc, char *argv[])
{
	socklen_t len = (socklen_t) 4;
	return 1;
}
EOF

saypending "checking whether socklen_t needs to be defined"
if $COMPILER $COMPILERFLAGS -o conftest conftest.c >> configure.log 2>&1; then
  SOCKLEN_TYPEDEF=""
  saypass "no"
else
  SOCKLEN_TYPEDEF="typedef int socklen_t;"
  saypass "yes"
fi

rm -f conftest conftest.c


# ---------------------------------------------------------------------------
# Figure out whether we need libcrypt
# ---------------------------------------------------------------------------

cat >conftest.c <<EOF
#include <crypt.h>
int main (int argc, char *argv[])
{
  char *test = crypt("abcdefg","aB");
  return 1;
}
EOF

saypending "checking where crypt() hides"
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >> configure.log 2>&1; then
  CRYPTH="#include <crypt.h>"
  saypass "crypt.h"
else
cat >conftest.c <<EOF
#include <unistd.h>
int main (int argc, char *argv[])
{
   char *test = crypt("abcdefg","aB");
   return 1;
}
EOF
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >>configure.log 2>&1; then
  saypass "unistd.h"
  CRYPTDEFINE=""
else
cat >conftest.c <<EOF
#define _XOPEN_SOURCE
#include <unistd.h>
int main (int argc, char *argv[])
{
   char *test = crypt("abcdefg","aB");
   return 1;
}
EOF
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >>configure.log 2>&1; then
  saypass "unistd.h"
  CRYPTDEFINE="#define _XOPEN_SOURCE"
else
  cat > conftest.c <<EOF
#define _XOPEN_SOURCE 5
#include <unistd.h>
int main (int argc, char *argv[])
{
    char *test = crypt("abcdefg","aB");
    return 1;
}
EOF
if $COMPILER $COMPILERFLAGS -o conftest.o -c conftest.c >> configure.log 2>&1; then
  saypass "unistd.h (evil netbsd)"
  CRYPTDEFINE="#define _XOPEN_SOURCE 5"
else
  sayfail "failed"
  exit 1
fi
fi
fi
fi
saypending "checking whether crypt needs -lcrypt"
if $COMPILER $COMPILERFLAGS -o conftest conftest.o >>configure.log 2>&1; then
  LIBCRYPT=""
  saypass "no"
else
  LIBCRYPT="-lcrypt"
  saypass "yes"
fi

rm -f conftest.c conftest.o conftest
# ---------------------------------------------------------------------------
# Figure out path to GDBM include
# ---------------------------------------------------------------------------

saypending "looking for gdbm include"
for loc in /usr/include /usr/local/include /opt/include /sw/include $HOME/include; do
  if [ -f "$loc/gdbm.h" ]; then
    GDBMINC="$loc"
  fi
done
if [ -z "$GDBMINC" ]; then
  sayfail "failed"
  exit 1
fi
saypass "$GDBMINC"
if [ "$GDBMINC" = "/sw/include" ]; then
  LIBGDBM="-L/sw/lib -lgdbm"
else
  LIBGDBM="-lgdbm"
fi
# ---------------------------------------------------------------------------
# Create the makeinclude file
# ---------------------------------------------------------------------------

saypending "creating makeinclude"

DATE=`date`

cat >makeinclude <<EOF
# Makeinclude generated by configure: $DATE

COMPILER = $COMPILER
COMPILERFLAGS = $COMPILERFLAGS
CXX = $CXX
CXXFLAGS = $CXXFLAGS
INCLUDES = -I$GDBMINC
LD = $LD
LDFLAGS = $LDFLAGS $LIBDL_LDFLAGS
LDL = $LIBDL
LIBS = $LIBPTHREAD $LIBDL $LIBSOCKET $LIBNSL $LIBCRYPT $LIBGDBM
LPTHREAD = $LIBPTHREAD
LSOCKET = $LIBSOCKET $LIBNSL
RANLIB = $RANLIB
RDYNAMIC = $RDYNAMIC
SHARED = $SHARED
EOF

saypass "done"
# ---------------------------------------------------------------------------
# Create the platform.h file
# ---------------------------------------------------------------------------

saypending "creating platform.h"

cat >platform.h <<EOF
#ifndef _PLATFORM_H
#define _PLATFORM_H

$CTIME_R_DEFINE
$CTIME_R_PTHREAD_DEFINE
$CTIME_R_XOPEN_DEFINE
$CTIME_R_XPG_DEFINE
$CTIME_R_INCLUDE
$PTHREAD_HAVE_RWLOCK
$PTHREAD_HAVE_TIMEDLOCK$SOCKLEN_TYPEDEF
$CRYPTH
$CRYPTDEFINE
#endif
EOF

saypass "done"
if [ -f configure.log ]; then rm -f configure.log; fi

