#!/bin/sh
# ===========================================================================
# Configure script generated by tina
# ===========================================================================

# ---------------------------------------------------------------------------
# Solaris' /bin/sh uses a braindead builtin echo, circumvent
# ---------------------------------------------------------------------------

TEST=`echo -n ""`
if [ -z "$TEST" ]; then
  ECHON="echo -n"
  NNL=""
else
  ECHON="/usr/bin/echo"
  NNL="\c"
fi

# ---------------------------------------------------------------------------
# Figure out if there's a Vendorware C++ compiler on board
# ---------------------------------------------------------------------------

$ECHON "looking for c++ compiler: $NNL"
CXX=`which CC 2>/dev/null`

if [ -f "$CXX" ]; then
  actually_gcc=`$CXX -v 2>&1 | grep gcc | sed -e "s/^gcc/Y/"`

  cat >conftest.cpp <<_eof_
#include <stdio.h>
int main(int argc, char *argv[]) {
  printf ("hello, nurse\n");
}
_eof_

  $CXX -o conftest.bin conftest.cpp >/dev/null 2>&1 || actually_gcc="YES"
  rm -f conftest.cpp conftest.bin >/dev/null 2>&1
  if [ ! -z "$actually_gcc" ]; then
    CXX=""
  fi
fi

if [ -f "$CXX" ]; then
  echo "$CXX"
  CXXFLAGS="-n32 -O2"
  SHARED="-shared"
  LD="$CXX"
  LDFLAGS=""
else
  CXX=`which g++`
  if [ -f "$CXX" ]; then
    echo "$CXX"
    CXXFLAGS=-O2
    SHARED="-shared -fPIC"
    LD="$CXX"
    LDFLAGS=""
  else
    echo "fail"
    CXX=""
    exit 1;
  fi
fi


# ---------------------------------------------------------------------------
# Figure out if there's a Vendorware C++ compiler on board
# ---------------------------------------------------------------------------

$ECHON "looking for ranlib: $NNL"
RANLIB=`which ranlib 2>/dev/null`
if [ ! -f "$RANLIB" ]; then
  RANLIB=""
fi

if [ -z "$RANLIB" ]; then
  RANLIB="echo"
  echo "n/a"
else
  echo "found"
  RANLIB="ranlib"
fi


# ---------------------------------------------------------------------------
# Figure out whether LD accepts -rdynamic
# ---------------------------------------------------------------------------

cat >conftest.cpp <<EOF
#include <stdio.h>

int main (int argc, char *argv[])
{
	printf ("hello, world\n");
    return 0;
}
EOF

$ECHON "checking whether $LD linker accepts -rdynamic: $NNL"
$CXX $CXXFLAGS -c conftest.cpp >/dev/null 2>&1
if $LD $LDFLAGS -rdynamic -o conftest conftest.o >>configure.log 2>&1; then
  RDYNAMIC="-rdynamic"
  echo "yes"
else
  RDYNAMIC=""
  echo "no"
fi

rm -f conftest.cpp conftest contest.o


# ---------------------------------------------------------------------------
# Figure out whether we need libdl
# ---------------------------------------------------------------------------

cat >conftest.cpp <<EOF
#include <dlfcn.h>
int main (int argc, char *argv[])
{
   void *test = dlopen ("conftest.so",RTLD_LAZY);
   return 1;
}
EOF

$ECHON "checking whether dlopen needs -ldl: $NNL"
if $CXX $CXXFLAGS -o conftest conftest.cpp >>configure.log 2>&1; then
  LIBDL=""
  echo "no"
else
  LIBDL="-ldl"
  echo "yes"
fi

rm -f conftest.cpp conftest


# ---------------------------------------------------------------------------
# Figure out path to mysql include
# ---------------------------------------------------------------------------

$ECHON "looking for mysql include: $NNL"
for loc in /usr/lib/mysql /usr/lib/mysql/include /usr/include/mysql /usr/local/include/mysql /usr/local/mysql/include /opt/mysql /opt/mysql/include /opt/inclujde/mysql /usr/freeware/mysql /usr/freeware/include /sw/include/mysql; do
  if [ -f "$loc/mysql.h" ]; then
    MYSQLINC="$loc"
  fi
done
if [ -z "$MYSQLINC" ]; then
  echo "failed"
  exit 1
fi
echo "$MYSQLINC"

# ---------------------------------------------------------------------------
# Figure out path to mysql static library
# ---------------------------------------------------------------------------

$ECHON "looking for mysql library: $NNL"
for loc in /usr/lib /usr/local/lib /usr/lib/mysql /usr/local/lib/mysql /opt/mysql /usr/local/mysql/lib /usr/mysql/lib /opt/mysql/lib /usr/freeware/lib /usr/freeware/mysql/lib /usr/freeware/lib/mysql /usr/freeware/lib32 /usr/freeware/lib32/mysql /sw/lib; do
  if [ -f "$loc/libmysqlclient.a" ]; then
    LIBMYSQL="$loc/libmysqlclient.a"
  else
    if [ -f "$loc/$libmysqlclient.so" ]; then
      LIBMYSQL="-L$loc -lmysqlclient"
    fi
  fi
done
if [ -z "$LIBMYSQL" ]; then
  echo "failed"
  exit 1
fi
echo "$LIBMYSQL"


# ---------------------------------------------------------------------------
# Check for libpthread functionality
# ---------------------------------------------------------------------------

cat >conftest.cpp <<EOF
#include <pthread.h>
#include <stdio.h>

int main (int argc, char *argv[])
{
	pthread_attr_t attr;
	pthread_mutexattr_t mattr;
	
	pthread_attr_init (&attr);
	pthread_mutexattr_init (&mattr);
	return 1;
}
EOF

$ECHON "checking for pthread support: $NNL"
if $CXX $CXXFLAGS -o conftest conftest.cpp >>configure.log 2>&1; then
  LIBPTHREAD=""
  echo "yes"
else
  if $CXX $CXXFLAGS -o conftest conftest.cpp -lpthread >>configure.log 2>&1; then
    LIBPTHREAD="-lpthread"
	echo "-lpthread"
  elif $CXX $CXXFLAGS -o conftest conftest.cpp -lc_r >>configure.log 2>&1; then
    LIBPTHREAD="-lc_r"
    echo "-lc_r"
  else
    echo "no"
    echo "*** This application needs a working pthreads implementation."
    exit
  fi
fi

$ECHON "checking for ctime_r: $NNL"
cat > conftest.cpp << EOF
#include <time.h>
int main (int argc, char *argv[])
{
	char buf[256];
	char *result;
	time_t ti;
	result = ctime_r (&ti, buf);
	return 0;
}
EOF
if $CXX $CXXFLAGS -o conftest.o -c conftest.cpp >>configure.log 2>&1; then
  echo "time.h"
else
  cat > conftest.cpp << EOF
#define _POSIX_C_SOURCE 199506L
#define _POSIX_PTHREAD_SEMANTICS 1
#define _XOPEN_SOURCE 1
#define __EXTENSIONS__ 1
#include <pthread.h>
#include <time.h>
int main (int argc, char *argv[])
{
	char buf[256];
	char *result;
	time_t ti;
	result = ctime_r (&ti, buf);
	return 0;
}
EOF
  if $CXX $CXXFLAGS -o conftest.o -c conftest.cpp >>configure.log 2>&1; then
    echo "time.h with solaris twist"
    CTIME_R_INCLUDE="#include <pthread.h>"
    CTIME_R_PTHREAD_DEFINE="#define _POSIX_PTHREAD_SEMANTICS 1"
    CTIME_R_XOPEN_DEFINE="#define _XOPEN_SOURCE 1"
    CTIME_R_XPG_DEFINE="#define __EXTENSIONS__ 1"
    CTIME_R_DEFINE="#define _POSIX_C_SOURCE 199506L"
  else
    echo "screwed"
    exit 1
  fi
fi

rm -f conftest conftest.o conftest.cpp
# ---------------------------------------------------------------------------
# Create the makeinclude file
# ---------------------------------------------------------------------------

$ECHON "creating makeinclude: $NNL"

DATE=`date`

cat >makeinclude <<EOF
# Makeinclude generated by configure: $DATE

CXX = $CXX
CXXFLAGS = $CXXFLAGS
INCLUDES = -I$MYSQLINC
LD = $LD
LDFLAGS = $LDFLAGS
LDL = $LIBDL
LIBS = $LIBDL $LIBMYSQL $LIBPTHREAD
LPTHREAD = $LIBPTHREAD
RANLIB = $RANLIB
RDYNAMIC = $RDYNAMIC
SHARED = $SHARED
EOF

echo "done"
# ---------------------------------------------------------------------------
# Create the platform.h file
# ---------------------------------------------------------------------------

$ECHON "creating platform.h: $NNL"

cat >platform.h <<EOF
#ifndef _PLATFORM_H
#define _PLATFORM_H

$CTIME_R_DEFINE
$CTIME_R_PTHREAD_DEFINE
$CTIME_R_XOPEN_DEFINE
$CTIME_R_XPG_DEFINE
$CTIME_R_INCLUDE
#endif
EOF

echo "done"
if [ -f configure.log ]; then rm -f configure.log; fi

