#!/bin/sh
# ===========================================================================
# Configure script generated by tina
# ===========================================================================

# ---------------------------------------------------------------------------
# Solaris' /bin/sh uses a braindead builtin echo, circumvent
# ---------------------------------------------------------------------------

TEST=`echo -n ""`
if [ -z "$TEST" ]; then
  ECHON="echo -n"
  NNL=""
else
  ECHON="/usr/bin/echo"
  NNL="\c"
fi

# ---------------------------------------------------------------------------
# Figure out if there's a Vendorware C++ compiler on board
# ---------------------------------------------------------------------------

$ECHON "looking for c++ compiler: $NNL"
CXX=`which CC 2>/dev/null`

if [ -f "$CXX" ]; then
  actually_gcc=`$CXX -v 2>&1 | grep gcc | sed -e "s/^gcc/Y/"`

  cat >conftest.cpp <<_eof_
#include <stdio.h>
int main(int argc, char *argv[]) {
  printf ("hello, nurse\n");
}
_eof_

  $CXX -o conftest.bin conftest.cpp >/dev/null 2>&1 || actually_gcc="YES"
  rm -f conftest.cpp conftest.bin >/dev/null 2>&1
  if [ ! -z "$actually_gcc" ]; then
    CXX=""
  fi
fi

if [ -f "$CXX" ]; then
  echo "$CXX"
  CXXFLAGS="-n32 -O"
  SHARED="-shared"
  LD="$CXX"
  LDFLAGS=""
else
  CXX=`which g++`
  if [ -f "$CXX" ]; then
    echo "$CXX"
    CXXFLAGS=${CXXFLAGS}
    SHARED="-shared -fPIC"
    LD="$CXX"
    LDFLAGS=""
  else
    echo "fail"
    CXX=""
    exit 1;
  fi
fi


# ---------------------------------------------------------------------------
# Figure out if there's a Vendorware C++ compiler on board
# ---------------------------------------------------------------------------

$ECHON "looking for ranlib: $NNL"
RANLIB=`which ranlib 2>/dev/null`
if [ ! -f "$RANLIB" ]; then
  RANLIB=""
fi

if [ -z "$RANLIB" ]; then
  RANLIB="echo"
  echo "n/a"
else
  echo "found"
  RANLIB="ranlib"
fi


# ---------------------------------------------------------------------------
# Figure out whether LD accepts -rdynamic
# ---------------------------------------------------------------------------

cat >conftest.cpp <<EOF
#include <stdio.h>

int main (int argc, char *argv[])
{
	printf ("hello, world\n");
    return 0;
}
EOF

$ECHON "checking whether $LD linker accepts -rdynamic: $NNL"
$CXX $CXXFLAGS -c conftest.cpp >/dev/null 2>&1
if $LD $LDFLAGS -rdynamic -o conftest conftest.o >>configure.log 2>&1; then
  RDYNAMIC="-rdynamic"
  echo "yes"
else
  RDYNAMIC=""
  echo "no"
fi

rm -f conftest.cpp conftest contest.o


# ---------------------------------------------------------------------------
# Check for libpthread functionality
# ---------------------------------------------------------------------------

cat >conftest.cpp <<EOF
#include <pthread.h>
#include <stdio.h>

int main (int argc, char *argv[])
{
	pthread_attr_t attr;
	pthread_mutexattr_t mattr;
	
	pthread_attr_init (&attr);
	pthread_mutexattr_init (&mattr);
	return 1;
}
EOF

$ECHON "checking for pthread support: $NNL"
if $CXX $CXXFLAGS -o conftest conftest.cpp >>configure.log 2>&1; then
  LIBPTHREAD=""
  echo "yes"
else
  if $CXX $CXXFLAGS -o conftest conftest.cpp -lpthread >>configure.log 2>&1; then
    LIBPTHREAD="-lpthread"
	echo "-lpthread"
  elif $CXX $CXXFLAGS -o conftest conftest.cpp -lc_r >>configure.log 2>&1; then
    LIBPTHREAD="-lc_r"
    echo "-lc_r"
  else
    echo "no"
    echo "*** This application needs a working pthreads implementation."
    exit
  fi
fi

$ECHON "checking for ctime_r: $NNL"
cat > conftest.cpp << EOF
#include <time.h>
int main (int argc, char *argv[])
{
	char buf[256];
	char *result;
	time_t ti;
	result = ctime_r (&ti, buf);
	return 0;
}
EOF
if $CXX $CXXFLAGS -o conftest.o -c conftest.cpp >>configure.log 2>&1; then
  echo "time.h"
else
  cat > conftest.cpp << EOF
#define _POSIX_C_SOURCE 199506L
#define _POSIX_PTHREAD_SEMANTICS 1
#define _XOPEN_SOURCE 1
#define __EXTENSIONS__ 1
#include <pthread.h>
#include <time.h>
int main (int argc, char *argv[])
{
	char buf[256];
	char *result;
	time_t ti;
	result = ctime_r (&ti, buf);
	return 0;
}
EOF
  if $CXX $CXXFLAGS -o conftest.o -c conftest.cpp >>configure.log 2>&1; then
    echo "time.h with solaris twist"
    CTIME_R_INCLUDE="#include <pthread.h>"
    CTIME_R_PTHREAD_DEFINE="#define _POSIX_PTHREAD_SEMANTICS 1"
    CTIME_R_XOPEN_DEFINE="#define _XOPEN_SOURCE 1"
    CTIME_R_XPG_DEFINE="#define __EXTENSIONS__ 1"
    CTIME_R_DEFINE="#define _POSIX_C_SOURCE 199506L"
  else
    echo "screwed"
    exit 1
  fi
fi

$ECHON "checking for pthread_rwlock_t: $NNL"
cat > conftest.cpp << EOF
#include <pthread.h>
int main (int argc, char *argv[])
{
	pthread_rwlock_t *rwlock;
	pthread_rwlock_trywrlock (rwlock);
	return 0;
}
EOF
if $CXX $CXXFLAGS -o conftest.o -c conftest.cpp >>configure.log 2>&1; then
  echo "yes"
  PTHREAD_HAVE_RWLOCK="#define PTHREAD_HAVE_RWLOCK 1"
  $ECHON "checking for pthread_rwlock_timedwrlock: $NNL"
  cat > conftest.cpp << EOF
#include <pthread.h>
#include <time.h>
int main (int argc, char *argv[])
{
	pthread_rwlock_t *rwlock;
	struct timespec ts;
	pthread_rwlock_timedwrlock (rwlock, &ts);
	return 0;
}
EOF
  if $CXX $CXXFLAGS -o conftest.o -c conftest.cpp >> configure.log 2>&1; then
    echo "yes"
    PTHREAD_HAVE_TIMEDLOCK="#define PTHREAD_HAVE_TIMEDLOCK 1"
  else
    echo "no"
    PTHREAD_HAVE_TIMEDLOCK=""
  fi
else
  echo "no"
  PTHREAD_HAVE_RWLOCK=""
  PTHREAD_HAVE_TIMEDLOCK=""
fi


rm -f conftest conftest.o conftest.cpp
# ---------------------------------------------------------------------------
# Figure out whether we need libdl
# ---------------------------------------------------------------------------

cat >conftest.cpp <<EOF
#include <dlfcn.h>
int main (int argc, char *argv[])
{
   void *test = dlopen ("conftest.so",RTLD_LAZY);
   return 1;
}
EOF

$ECHON "checking whether dlopen needs -ldl: $NNL"
if $CXX $CXXFLAGS -o conftest conftest.cpp >>configure.log 2>&1; then
  LIBDL=""
  echo "no"
else
  LIBDL="-ldl"
  echo "yes"
fi

rm -f conftest.cpp conftest


# ---------------------------------------------------------------------------
# Figure out whether we neet libsocket
# ---------------------------------------------------------------------------

cat >conftest.cpp <<EOF
#include <sys/types.h>
#include <sys/socket.h>

int main (int argc, char *argv[])
{
    int test = socket(PF_INET, SOCK_STREAM, 0);
    return 1;
}
EOF

$ECHON "checking whether socket needs -lsocket: $NNL"
if $CXX $CXXFLAGS -o conftest conftest.cpp >>configure.log 2>&1; then
  LIBSOCKET=""
  echo "no"
else
  LIBSOCKET="-lsocket"
  echo "yes"
fi

rm -f conftest.cpp conftest

# ---------------------------------------------------------------------------
# Figure out whether we need libnsl
# ---------------------------------------------------------------------------

cat >conftest.cpp <<EOF
#include <netdb.h>

int main (int argc, char *argv[])
{
	struct hostent *h = gethostbyname("localhost");
    return 1;
}
EOF

$ECHON "checking whether gethostbyname needs -lnsl: $NNL"
if $CXX $CXXFLAGS -o conftest conftest.cpp >>configure.log 2>&1; then
  LIBNSL=""
  echo "no"
else
  LIBNSL="-lnsl"
  echo "yes"
fi

rm -f conftest.cpp conftest

# ---------------------------------------------------------------------------
# Figure out whether socklen_t is defined
# ---------------------------------------------------------------------------

cat >conftest.cpp <<EOF
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

int main(int argc, char *argv[])
{
	socklen_t len = (socklen_t) 4;
	return 1;
}
EOF

$ECHON "checking whether socklen_t needs to be defined: $NNL"
if $CXX $CXXFLAGS -o conftest conftest.cpp >> configure.log 2>&1; then
  SOCKLEN_TYPEDEF=""
  echo "no"
else
  SOCKLEN_TYPEDEF="typedef int socklen_t;"
  echo "yes"
fi

rm -f conftest conftest.cpp


# ---------------------------------------------------------------------------
# Figure out whether we need libcrypt
# ---------------------------------------------------------------------------

cat >conftest.cpp <<EOF
#include <crypt.h>
int main (int argc, char *argv[])
{
  char *test = crypt("abcdefg","aB");
  return 1;
}
EOF

$ECHON "checking where crypt() hides: $NNL"
if $CXX $CXXFLAGS -o conftest.o -c conftest.cpp >> configure.log 2>&1; then
  CRYPTH="#include <crypt.h>"
  echo "crypt.h"
else
cat >conftest.cpp <<EOF
#include <unistd.h>
int main (int argc, char *argv[])
{
   char *test = crypt("abcdefg","aB");
   return 1;
}
EOF
if $CXX $CXXFLAGS -o conftest.o -c conftest.cpp >>configure.log 2>&1; then
  echo "unistd.h"
  CRYPTDEFINE=""
else
cat >conftest.cpp <<EOF
#define _XOPEN_SOURCE
#include <unistd.h>
int main (int argc, char *argv[])
{
   char *test = crypt("abcdefg","aB");
   return 1;
}
EOF
if $CXX $CXXFLAGS -o conftest.o -c conftest.cpp >>configure.log 2>&1; then
  echo "unistd.h"
  CRYPTDEFINE="#define _XOPEN_SOURCE"
else
  cat > conftest.cpp <<EOF
#define _XOPEN_SOURCE 5
#include <unistd.h>
int main (int argc, char *argv[])
{
    char *test = crypt("abcdefg","aB");
    return 1;
}
EOF
if $CXX $CXXFLAGS -o conftest.o -c conftest.cpp >> configure.log 2>&1; then
  echo "unistd.h (evil netbsd)"
  CRYPTDEFINE="#define _XOPEN_SOURCE 5"
else
  echo "failed"
  exit 1
fi
fi
fi
fi
$ECHON "checking whether crypt needs -lcrypt: $NNL"
if $CXX $CXXFLAGS -o conftest conftest.o >>configure.log 2>&1; then
  LIBCRYPT=""
  echo "no"
else
  LIBCRYPT="-lcrypt"
  echo "yes"
fi

rm -f conftest.cpp conftest.o conftest
# ---------------------------------------------------------------------------
# Figure out if struct tm has a tm_gmtoff
# ---------------------------------------------------------------------------


$ECHON "checking for tm_gmtoff support: $NNL"
cat > conftest.cpp << EOF
#include <time.h>

int main (int argc, char *argv[])
{
	struct tm t;
	t.tm_gmtoff = 0;
	return 0;
}
EOF
if $CXX $CXXFLAGS -o conftest conftest.cpp >> configure.log 2>&1; then
  HAVE_GMTOFF="#define HAVE_GMTOFF 1"
  echo "yes"
else
  echo "no"
fi
rm -f conftest.cpp conftest >/dev/null 2>&1
# ---------------------------------------------------------------------------
# Figure out if the system supports linux-style sendfile()
# ---------------------------------------------------------------------------


$ECHON "checking for sendfile() support: $NNL"
cat > conftest.cpp << EOF
#include <stdio.h>
#include <sys/types.h>
#include <sys/sendfile.h>

int main (int argc, char *argv[])
{
	off_t offs;
	sendfile (1, 1, &offs, 1);
}
EOF
if $CXX $CXXFLAGS -o conftest conftest.cpp >> configure.log 2>&1; then
  HAVE_SENDFILE="#define HAVE_SENDFILE 1"
  echo "yes"
else
  echo "no"
fi
rm -f conftest.cpp conftest >/dev/null 2>&1
# ---------------------------------------------------------------------------
# Figure out if the system supports linux-style PASSCRED voudon
# ---------------------------------------------------------------------------


$ECHON "checking for SO_PASSCRED support: $NNL"
cat > conftest.cpp << EOF
#include <sys/types.h>
#include <netinet/in.h>
#include <sys/un.h>
#include <sys/socket.h>
#include <linux/socket.h>
#include <sys/uio.h>

int main (void)
{
    int foo;
    setsockopt (1, SOL_SOCKET, SO_PASSCRED, (char *) &foo, sizeof(int));
}

EOF

if $CXX $CXXFLAGS -o conftest.o -c conftest.cpp >> configure.log 2>&1; then
  HAVE_PASSCRED="#define HAVE_PASSCRED 1"
  echo "yes"
else
  echo "no"
fi
rm -f conftest.cpp conftest.o >/dev/null 2>&1
# ---------------------------------------------------------------------------
# Create the makeinclude file
# ---------------------------------------------------------------------------

$ECHON "creating makeinclude: $NNL"

DATE=`date`

cat >makeinclude <<EOF
# Makeinclude generated by configure: $DATE

CXX = $CXX
CXXFLAGS = $CXXFLAGS
LD = $LD
LDFLAGS = $LDFLAGS
LDL = $LIBDL
LIBS = $LIBPTHREAD $LIBDL $LIBSOCKET $LIBNSL $LIBCRYPT
LPTHREAD = $LIBPTHREAD
LSOCKET = $LIBSOCKET $LIBNSL
RANLIB = $RANLIB
RDYNAMIC = $RDYNAMIC
SHARED = $SHARED
EOF

echo "done"
# ---------------------------------------------------------------------------
# Create the platform.h file
# ---------------------------------------------------------------------------

$ECHON "creating platform.h: $NNL"

cat >platform.h <<EOF
#ifndef _PLATFORM_H
#define _PLATFORM_H

$CTIME_R_DEFINE
$CTIME_R_PTHREAD_DEFINE
$CTIME_R_XOPEN_DEFINE
$CTIME_R_XPG_DEFINE
$CTIME_R_INCLUDE
$PTHREAD_HAVE_RWLOCK
$PTHREAD_HAVE_TIMEDLOCK$SOCKLEN_TYPEDEF
$CRYPTH
$CRYPTDEFINE
$HAVE_GMTOFF
$HAVE_SENDFILE
$HAVE_PASSCRED
#endif
EOF

echo "done"
if [ -f configure.log ]; then rm -f configure.log; fi

